/* tslint:disable */
/* eslint-disable */
/**
 * Hydra API
 * Specification of the Hydra REST API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { JobsetInput } from './jobset-input';
 /**
 * 
 *
 * @export
 * @interface Jobset
 */
export interface Jobset {

    /**
     * the name of the jobset
     *
     * @type {string}
     * @memberof Jobset
     */
    name?: string;

    /**
     * the project this jobset belongs to
     *
     * @type {string}
     * @memberof Jobset
     */
    project?: string;

    /**
     * a description of the jobset
     *
     * @type {string}
     * @memberof Jobset
     */
    description?: string | null;

    /**
     * the name of the jobset input which contains the nixexprpath
     *
     * @type {string}
     * @memberof Jobset
     */
    nixexprinput?: string | null;

    /**
     * the path to the file to evaluate
     *
     * @type {string}
     * @memberof Jobset
     */
    nixexprpath?: string | null;

    /**
     * contains the stderr output of the nix-instantiate command
     *
     * @type {string}
     * @memberof Jobset
     */
    errormsg?: string | null;

    /**
     * timestamp associated with errormsg
     *
     * @type {number}
     * @memberof Jobset
     */
    errortime?: number | null;

    /**
     * the last time the evaluator looked at this jobset
     *
     * @type {number}
     * @memberof Jobset
     */
    lastcheckedtime?: number | null;

    /**
     * set to the time we were triggered by a push event
     *
     * @type {number}
     * @memberof Jobset
     */
    triggertime?: number | null;

    /**
     * 0 is disabled, 1 is enabled, 2 is one-shot, and 3 is one-at-a-time
     *
     * @type {number}
     * @memberof Jobset
     */
    enabled?: number;

    /**
     * when true the jobset sends emails when previously-successful builds fail
     *
     * @type {boolean}
     * @memberof Jobset
     */
    enableemail?: boolean;

    /**
     * when true the jobset supports executing dynamically defined RunCommand hooks. Requires the server and project's configuration to also enable dynamic RunCommand.
     *
     * @type {boolean}
     * @memberof Jobset
     */
    enableDynamicRunCommand?: boolean;

    /**
     * when true the jobset is visible in the web frontend
     *
     * @type {boolean}
     * @memberof Jobset
     */
    visible?: boolean;

    /**
     * email address to send notices to instead of the package maintainer (can be a comma separated list)
     *
     * @type {string}
     * @memberof Jobset
     */
    emailoverride?: string;

    /**
     * number or evaluations to keep
     *
     * @type {number}
     * @memberof Jobset
     */
    keepnr?: number;

    /**
     * interval (in seconds) in which to check for evaluation
     *
     * @type {number}
     * @memberof Jobset
     */
    checkinterval?: number;

    /**
     * how many shares to be allocated to the jobset
     *
     * @type {number}
     * @memberof Jobset
     */
    schedulingshares?: number;

    /**
     * contains the error message when there was a problem fetching sources for a jobset
     *
     * @type {string}
     * @memberof Jobset
     */
    fetcherrormsg?: string | null;

    /**
     * set to the time the latest evaluation started (if one is currently running)
     *
     * @type {number}
     * @memberof Jobset
     */
    startime?: number | null;

    /**
     * the type of the jobset
     *
     * @type {number}
     * @memberof Jobset
     */
    type?: number;

    /**
     * the flake uri to evaluate
     *
     * @type {string}
     * @memberof Jobset
     */
    flake?: string | null;

    /**
     * inputs configured for this jobset
     *
     * @type {{ [key: string]: JobsetInput; }}
     * @memberof Jobset
     */
    inputs?: { [key: string]: JobsetInput; };
}
